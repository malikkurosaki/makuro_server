generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Content {
  id         Int         @id @default(autoincrement())
  judul      String
  harga      Int
  keterangan String
  Gambar     Gambar[]
  Postingan  Postingan[]
}

model Gambar {
  id          Int     @id @default(autoincrement())
  destination String
  filename    String
  path        String
  contentId   Int
  Content     Content @relation(fields: [contentId], references: [id])

  @@index([contentId], map: "Gambar_contentId_fkey")
}

model Postingan {
  id        Int       @id @default(autoincrement())
  tanggal   DateTime  @default(now())
  contentId Int
  groupId   String
  userId    Int
  postingId String
  Content   Content   @relation(fields: [contentId], references: [id])
  UserGroup UserGroup @relation(fields: [groupId], references: [groupId])
  User      User      @relation(fields: [userId], references: [id])

  @@index([contentId], map: "Postingan_contentId_fkey")
  @@index([groupId], map: "Postingan_groupId_fkey")
  @@index([userId], map: "Postingan_userId_fkey")
}

model Session {
  id   Int    @id @default(autoincrement())
  data String @db.Text
  User User   @relation(fields: [id], references: [id], onDelete: Cascade)
}

model SessionBrowser {
  id   Int  @id @default(autoincrement())
  User User @relation(fields: [id], references: [id], onDelete: NoAction)
}

model ShareKeBanyak {
  id        Int      @id @default(autoincrement())
  groupName String
  tanggal   DateTime
  userId    Int
  User      User     @relation(fields: [userId], references: [id])

  @@index([userId], map: "ShareKeBanyak_userId_fkey")
}

model User {
  id             Int             @id @default(autoincrement())
  name           String
  email          String          @unique
  password       String
  active         Boolean         @default(true)
  desc           String?
  Postingan      Postingan[]
  Session        Session?
  SessionBrowser SessionBrowser?
  ShareKeBanyak  ShareKeBanyak[]
  UserGroup      UserGroup[]
}

model UserGroup {
  groupId   String
  name      String
  url       String
  userId    Int
  jualBeli  Boolean?
  User      User        @relation(fields: [userId], references: [id])
  Postingan Postingan[]

  @@id([groupId, userId])
  @@index([userId], map: "UserGroup_userId_fkey")
}
